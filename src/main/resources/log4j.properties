#配置根logger,指定level、appender
log4j.rootLogger = DEBUG,stout
#指定Appender stout的输出终端类型和layout
log4j.appender.stout = org.apache.log4j.ConsoleAppender
log4j.appender.stout.Target = System.out
log4j.appender.stout.layout = org.apache.log4j.PatternLayout
#指定具体的输出格式
log4j.appender.stout.layout.conversionPattern = %d{yyyy MM dd HH:mm:ss} [Level:%p] %m [Method:%M]%n


#配置子logger，当在com.liang.log4j_demo.service包下的类中使用logger并且没有指定具体的子logger名称时使用该logger
log4j.logger.com.liang.log4j_demo.service = INFO,dailyRollingFile
#设置不从父logger继承appender,默认为true
log4j.additivity.com.liang.log4j_demo.service = FALSE
log4j.appender.dailyRollingFile = org.apache.log4j.DailyRollingFileAppender
#指定日志文件位置
log4j.appender.dailyRollingFile.File = logs/log.log
#设置什么时间回滚日志文件
log4j.appender.dailyRollingFile.DatePattern = '.'yyyy-MM-dd-HH-mm
#设置appender对象的阀值
#log4j.appender.dailyRollingFile.Threshold = INFO
log4j.appender.dailyRollingFile.layout = org.apache.log4j.PatternLayout
log4j.appender.dailyRollingFile.layout.conversionPattern = [Level:%p] %x%l%m  [Time:%d{yyyy-MM-dd HH:mm:ss.SSS}]%n


##配置子logger，当在com.liang.log4j_demo.dao包下的类没有指定具体使用的子logger时使用该logger
log4j.logger.com.liang.log4j_demo.dao = ERROR,rollingFile
log4j.additivity.com.liang.log4j_demo.dao = FALSE
log4j.appender.rollingFile = org.apache.log4j.RollingFileAppender
log4j.appender.rollingFile.file = logs/error.log
#设置文件最大为4KB,超过该值则回滚日志文件
log4j.appender.rollingFile.MaxFileSize = 4KB
#输出文件最大序号为2
log4j.appender.file.maxBackupIndex=2
log4j.appender.rollingFile.layout = org.apache.log4j.PatternLayout
log4j.appender.rollingFile.layout.conversionPattern = %n%n%d{yyyy-MM-dd HH:mm:ss}  [Level: %p]  [Position: %c]  [Number: %L]%n%n%m